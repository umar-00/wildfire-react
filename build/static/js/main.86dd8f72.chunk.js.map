{"version":3,"sources":["components/LocationMarker/LocationMarker.js","components/LocationInfoModal/LocationInfoModal.js","components/Map/Map.js","components/Loader/Loader.styles.js","components/Loader/Loader.js","components/DropDownToggleButton/DropDownToggleButton.js","components/Header/Header.js","components/SideBar/SideBar.js","App.js","reportWebVitals.js","index.js"],"names":["LocationMarker","lat","lng","onClick","icon","className","onTouchEnd","LocationInfoModal","info","show","id","title","Map","eventData","center","zoom","eventSelection","handleSideBarToggle","useState","locationInfo","setLocationInfo","setShow","bootstrapURLKeys","key","defaultCenter","defaultZoom","map","event","categories","geometries","coordinates","fireIcon","e","stormIcon","type","location","volcanoIcon","Math","floor","random","defaultProps","Wrapper","styled","div","Spinner","Loader","DropDownToggleButton","toggleClick","Header","handleRadioChange","locationIcon","value","name","onChange","defaultChecked","htmlFor","SideBar","sideBarClasses","App","setEventData","loading","setLoading","disasterEvent","setDisasterEvent","sideBarOpen","setSideBarOpen","useEffect","a","fetch","res","json","events","fetchEvents","target","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86dd8f72.chunk.js","sourcesContent":["import { Icon } from \"@iconify/react\";\nimport \"./LocationMarker.css\";\n\nconst LocationMarker = ({ lat, lng, onClick, icon }) => {\n  return (\n    <div className=\"location-marker\" onTouchEnd={onClick} onClick={onClick}>\n      <Icon icon={icon} className=\"location-icon\" />\n    </div>\n  );\n};\n\nexport default LocationMarker;\n","import \"./LocationInfoModal.css\";\n\nconst LocationInfoModal = ({ info, onClick, show }) => {\n  // if (!show) {\n  //   return null;\n  // }\n\n  return (\n    <div className={`location-info-modal ${show ? \"show\" : \"\"}`}>\n      <h2>Event location info</h2>\n      <ul>\n        <li>\n          ID: <strong>{info.id}</strong>\n        </li>\n        <li>\n          TITLE: <strong>{info.title}</strong>\n        </li>\n      </ul>\n      <button className=\"close-modal-button\" onClick={onClick}>\n        X\n      </button>\n    </div>\n  );\n};\n\nexport default LocationInfoModal;\n","import { useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport LocationMarker from \"../LocationMarker/LocationMarker\";\nimport LocationInfoModal from \"../LocationInfoModal/LocationInfoModal\";\n\n// CSS\nimport \"./Map.css\";\n\n// Icons\nimport fireIcon from \"@iconify/icons-mdi/fire-alert\";\nimport stormIcon from \"@iconify/icons-carbon/thunderstorm-severe\";\nimport volcanoIcon from \"@iconify/icons-maki/mountain\";\n\nconst Map = ({\n  eventData,\n  center,\n  zoom,\n  eventSelection,\n  handleSideBarToggle,\n}) => {\n  const [locationInfo, setLocationInfo] = useState(null);\n  const [show, setShow] = useState(false);\n\n  // console.log(eventData[0]);\n\n  // console.log(eventSelection);\n\n  return (\n    <div className=\"map\" onClick={handleSideBarToggle}>\n      <GoogleMapReact\n        onClick={() => setShow(false)}\n        bootstrapURLKeys={{ key: \"AIzaSyA2tNwWfXkysXss4JleY7SX1SaZJbK93Bc\" }}\n        defaultCenter={center}\n        defaultZoom={zoom}\n      >\n        {/* Check input from radio button, and render location markers at event coordinates */}\n        {eventSelection === \"wildfires\" &&\n          eventData.map((event) =>\n            event.categories[0].id === 8 ? (\n              <LocationMarker\n                key={event.id}\n                lat={event.geometries[0].coordinates[1]}\n                lng={event.geometries[0].coordinates[0]}\n                icon={fireIcon}\n                onClick={(e) => {\n                  // console.log(e);\n                  // e.preventDefault();\n                  setLocationInfo({ id: event.id, title: event.title });\n                  setShow(true);\n                }}\n              />\n            ) : null\n          )}\n        {eventSelection === \"storms\" &&\n          eventData.map((event) =>\n            event.categories[0].id === 10 ? (\n              <LocationMarker\n                key={event.id}\n                lat={event.geometries[0].coordinates[1]}\n                lng={event.geometries[0].coordinates[0]}\n                icon={stormIcon}\n                onClick={() => {\n                  setLocationInfo({ id: event.id, title: event.title });\n                  setShow(true);\n                }}\n              />\n            ) : null\n          )}\n        {/* Volcanoes events that have a 2d coordinate array (from api) are mapped seperately */}\n        {eventSelection === \"volcanoes\" &&\n          eventData.map((event) =>\n            event.categories[0].id === 12 ? (\n              event.geometries[0].type === \"Polygon\" ? (\n                event.geometries[0].coordinates[0].map((location) => (\n                  <LocationMarker\n                    key={Math.floor(Math.random() * 10000)}\n                    lat={location[1]}\n                    lng={location[0]}\n                    icon={volcanoIcon}\n                    onClick={() => {\n                      setLocationInfo({ id: event.id, title: event.title });\n                      setShow(true);\n                    }}\n                  />\n                ))\n              ) : (\n                <LocationMarker\n                  key={event.id}\n                  lat={event.geometries[0].coordinates[1]}\n                  lng={event.geometries[0].coordinates[0]}\n                  icon={volcanoIcon}\n                  onClick={() => {\n                    setLocationInfo({ id: event.id, title: event.title });\n                    setShow(true);\n                  }}\n                />\n              )\n            ) : null\n          )}\n      </GoogleMapReact>\n\n      {locationInfo && (\n        <LocationInfoModal\n          info={locationInfo}\n          onClick={() => setShow(false)}\n          show={show}\n        />\n      )}\n    </div>\n  );\n};\n\nMap.defaultProps = {\n  center: {\n    lat: 53.0793,\n    lng: 8.8017,\n  },\n  zoom: 4,\n};\n\nexport default Map;\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n`;\r\n\r\nexport const Spinner = styled.div`\r\n  border: 5px solid #b8b8b8;\r\n  border-top: 5px solid black;\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  /* margin: 0 auto; */\r\n  background: white;\r\n\r\n  /* position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  margin: auto; */\r\n\r\n  animation: spin 1s linear infinite;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import { Wrapper, Spinner } from \"./Loader.styles\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner></Spinner>\r\n      <h1>Fetching Data</h1>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\nimport \"./DropDownToggleButton.css\";\n\nconst DropDownToggleButton = ({ toggleClick }) => {\n  return (\n    <button className=\"toggle-button\" onClick={toggleClick}>\n      {\" \"}\n      Select Disaster Event ▼\n      {/* <div className=\"toggle-button-line\" />\n      <div className=\"toggle-button-line\" />\n      <div className=\"toggle-button-line\" /> */}\n    </button>\n  );\n};\n\nexport default DropDownToggleButton;\n","import { Icon } from \"@iconify/react\";\nimport locationIcon from \"@iconify/icons-mdi/fire-alert\";\nimport DropDownToggleButton from \"../DropDownToggleButton/DropDownToggleButton\";\nimport \"./Header.css\";\n\nconst Header = ({ handleRadioChange, handleSideBarToggle }) => {\n  return (\n    <header className=\"header\">\n      <h1>\n        <Icon className=\"header-icon\" icon={locationIcon} /> Disaster Events\n        Tracker\n      </h1>\n      <div className=\"radio-container\">\n        <input\n          type=\"radio\"\n          value=\"wildfires\"\n          name=\"disaster\"\n          onChange={handleRadioChange}\n          id=\"Wildfire\"\n          defaultChecked\n        />\n        {\"\"}\n        <label htmlFor=\"Wildfire\">\n          <span> Wildfires </span>\n        </label>\n        <input\n          type=\"radio\"\n          value=\"storms\"\n          name=\"disaster\"\n          onChange={handleRadioChange}\n          id=\"Storm\"\n        />{\" \"}\n        <label htmlFor=\"Storm\">\n          <span>Storms</span>\n        </label>\n        <input\n          type=\"radio\"\n          value=\"volcanoes\"\n          name=\"disaster\"\n          onChange={handleRadioChange}\n          id=\"Volcano\"\n        />\n        {\"\"}\n        <label htmlFor=\"Volcano\">\n          <span>Volcanoes</span>\n        </label>\n      </div>\n\n      {/* <div className=\"menu-button\"></div> */}\n      <DropDownToggleButton toggleClick={handleSideBarToggle} />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport \"./SideBar.css\";\n\nconst SideBar = ({ handleSideBarToggle, show }) => {\n  let sideBarClasses = \"side-bar\";\n  if (show) {\n    sideBarClasses = \"side-bar open\";\n  }\n\n  return (\n    <nav className={sideBarClasses}>\n      <div className=\"radio-container-side-bar\">\n        <input\n          type=\"radio\"\n          value=\"wildfires\"\n          name=\"disaster\"\n          // onChange={handleChange}\n          id=\"Wildfire\"\n        />\n        {\"\"}\n        <label htmlFor=\"Wildfire\" onClick={handleSideBarToggle}>\n          <span> Wildfires </span>\n        </label>\n        <input\n          type=\"radio\"\n          value=\"storms\"\n          name=\"disaster\"\n          // onChange={handleChange}\n          id=\"Storm\"\n        />{\" \"}\n        <label htmlFor=\"Storm\" onClick={handleSideBarToggle}>\n          <span>Storms</span>\n        </label>\n        <input\n          type=\"radio\"\n          value=\"volcanoes\"\n          name=\"disaster\"\n          // onChange={handleChange}\n          id=\"Volcano\"\n        />\n        {\"\"}\n        <label htmlFor=\"Volcano\" onClick={handleSideBarToggle}>\n          <span>Volcanoes</span>\n        </label>\n      </div>\n    </nav>\n  );\n};\n\nexport default SideBar;\n","import React, { useState, useEffect } from \"react\";\nimport Map from \"./components/Map/Map\";\nimport Loader from \"./components/Loader/Loader\";\nimport Header from \"./components/Header/Header\";\nimport SideBar from \"./components/SideBar/SideBar\";\n// import BackDrop from \"./components/BackDrop/BackDrop\";\n\nfunction App() {\n  const [eventData, setEventData] = useState([]);\n  const [loading, setLoading] = useState([]);\n  const [disasterEvent, setDisasterEvent] = useState(\"wildfires\");\n  const [sideBarOpen, setSideBarOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true);\n      const res = await fetch(\n        \"https://eonet.sci.gsfc.nasa.gov/api/v2.1/events\"\n      );\n      const { events } = await res.json();\n\n      setEventData(events);\n      setLoading(false);\n    };\n\n    // handleRadioChange();\n\n    fetchEvents();\n  }, []);\n\n  const handleRadioChange = (e) => {\n    setDisasterEvent(e.target.value);\n  };\n\n  // console.log(eventData);\n  // console.log(disasterEvent);\n  // console.log(sideBarOpen);\n\n  return (\n    <div>\n      <Header\n        handleRadioChange={handleRadioChange}\n        handleSideBarToggle={() => setSideBarOpen((prevState) => !prevState)}\n      />\n      <SideBar\n        handleSideBarToggle={() => setSideBarOpen(false)}\n        show={sideBarOpen}\n      />\n      {/* {sideBarOpen && (\n        <BackDrop handleSideBarToggle={() => setSideBarOpen(false)} />\n      )} */}\n\n      <div>\n        {!loading ? (\n          <Map\n            eventData={eventData}\n            eventSelection={disasterEvent}\n            handleSideBarToggle={() => setSideBarOpen(false)}\n          />\n        ) : (\n          <Loader />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}