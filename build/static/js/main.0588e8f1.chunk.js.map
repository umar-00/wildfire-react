{"version":3,"sources":["components/LocationMarker.js","components/LocationInfoModal.js","components/Map.js","components/Loader/Loader.styles.js","components/Loader/Loader.js","components/SideBarToggleButton.js","components/Header.js","components/SideBar/SideBar.js","App.js","reportWebVitals.js","index.js"],"names":["LocationMarker","lat","lng","onClick","icon","className","LocationInfoModal","info","show","id","title","Map","eventData","center","zoom","eventSelection","useState","locationInfo","setLocationInfo","setShow","bootstrapURLKeys","key","defaultCenter","defaultZoom","map","event","categories","geometries","coordinates","fireIcon","stormIcon","type","location","volcanoIcon","Math","floor","random","defaultProps","Wrapper","styled","div","Spinner","Loader","SideBarToggleButton","handleSideBarToggle","Header","handleRadioChange","locationIcon","value","name","defaultChecked","onChange","htmlFor","SideBar","sideBarClasses","App","setEventData","loading","setLoading","disasterEvent","setDisasterEvent","sideBarOpen","setSideBarOpen","useEffect","a","fetch","res","json","events","fetchEvents","e","target","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0588e8f1.chunk.js","sourcesContent":["import { Icon } from \"@iconify/react\";\r\n\r\nconst LocationMarker = ({ lat, lng, onClick, icon }) => {\r\n  return (\r\n    <div className=\"location-marker\" onClick={onClick}>\r\n      <Icon icon={icon} className=\"location-icon\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationMarker;\r\n","const LocationInfoModal = ({ info, onClick, show }) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"location-info-modal\">\r\n      <h2>Event location info</h2>\r\n      <ul>\r\n        <li>\r\n          ID: <strong>{info.id}</strong>\r\n        </li>\r\n        <li>\r\n          TITLE: <strong>{info.title}</strong>\r\n        </li>\r\n      </ul>\r\n      <button className=\"close-modal-button\" onClick={onClick}>\r\n        X\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationInfoModal;\r\n","import { useState } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport LocationMarker from \"./LocationMarker\";\r\nimport LocationInfoModal from \"./LocationInfoModal\";\r\n\r\n// Icons\r\nimport fireIcon from \"@iconify/icons-mdi/fire-alert\";\r\nimport stormIcon from \"@iconify/icons-carbon/thunderstorm-severe\";\r\nimport volcanoIcon from \"@iconify/icons-maki/mountain\";\r\n\r\nconst Map = ({ eventData, center, zoom, eventSelection }) => {\r\n  const [locationInfo, setLocationInfo] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n\r\n  // console.log(eventData[0]);\r\n\r\n  // console.log(eventSelection);\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <GoogleMapReact\r\n        onClick={() => setShow(false)}\r\n        bootstrapURLKeys={{ key: \"AIzaSyA2tNwWfXkysXss4JleY7SX1SaZJbK93Bc\" }}\r\n        defaultCenter={center}\r\n        defaultZoom={zoom}\r\n      >\r\n        {/* Check input from radio button, and render location markers at event coordinates */}\r\n        {eventSelection === \"wildfires\" &&\r\n          eventData.map((event) =>\r\n            event.categories[0].id === 8 ? (\r\n              <LocationMarker\r\n                key={event.id}\r\n                lat={event.geometries[0].coordinates[1]}\r\n                lng={event.geometries[0].coordinates[0]}\r\n                icon={fireIcon}\r\n                onClick={() => {\r\n                  setLocationInfo({ id: event.id, title: event.title });\r\n                  setShow(true);\r\n                }}\r\n              />\r\n            ) : null\r\n          )}\r\n        {eventSelection === \"storms\" &&\r\n          eventData.map((event) =>\r\n            event.categories[0].id === 10 ? (\r\n              <LocationMarker\r\n                key={event.id}\r\n                lat={event.geometries[0].coordinates[1]}\r\n                lng={event.geometries[0].coordinates[0]}\r\n                icon={stormIcon}\r\n                onClick={() => {\r\n                  setLocationInfo({ id: event.id, title: event.title });\r\n                  setShow(true);\r\n                }}\r\n              />\r\n            ) : null\r\n          )}\r\n        {/* Volcanoes events that have a 2d coordinate array are mapped seperately */}\r\n        {eventSelection === \"volcanoes\" &&\r\n          eventData.map((event) =>\r\n            event.categories[0].id === 12 ? (\r\n              event.geometries[0].type === \"Polygon\" ? (\r\n                event.geometries[0].coordinates[0].map((location) => (\r\n                  <LocationMarker\r\n                    key={Math.floor(Math.random() * 10000)}\r\n                    lat={location[1]}\r\n                    lng={location[0]}\r\n                    icon={volcanoIcon}\r\n                    onClick={() => {\r\n                      setLocationInfo({ id: event.id, title: event.title });\r\n                      setShow(true);\r\n                    }}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <LocationMarker\r\n                  key={event.id}\r\n                  lat={event.geometries[0].coordinates[1]}\r\n                  lng={event.geometries[0].coordinates[0]}\r\n                  icon={volcanoIcon}\r\n                  onClick={() => {\r\n                    setLocationInfo({ id: event.id, title: event.title });\r\n                    setShow(true);\r\n                  }}\r\n                />\r\n              )\r\n            ) : null\r\n          )}\r\n      </GoogleMapReact>\r\n\r\n      {locationInfo && (\r\n        <LocationInfoModal\r\n          info={locationInfo}\r\n          onClick={() => setShow(false)}\r\n          show={show}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nMap.defaultProps = {\r\n  center: {\r\n    lat: 53.0793,\r\n    lng: 8.8017,\r\n  },\r\n  zoom: 4,\r\n};\r\n\r\nexport default Map;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n`;\r\n\r\nexport const Spinner = styled.div`\r\n  border: 5px solid #b8b8b8;\r\n  border-top: 5px solid black;\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  /* margin: 0 auto; */\r\n  background: white;\r\n\r\n  /* position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  margin: auto; */\r\n\r\n  animation: spin 1s linear infinite;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import { Wrapper, Spinner } from \"./Loader.styles\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner></Spinner>\r\n      <h1>Fetching Data</h1>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nconst SideBarToggleButton = ({ handleSideBarToggle }) => {\r\n  return (\r\n    <button className=\"toggle-button\" onClick={handleSideBarToggle}>\r\n      <div className=\"toggle-button-line\" />\r\n      <div className=\"toggle-button-line\" />\r\n      <div className=\"toggle-button-line\" />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SideBarToggleButton;\r\n","import { Icon } from \"@iconify/react\";\r\nimport locationIcon from \"@iconify/icons-mdi/fire-alert\";\r\nimport SideBarToggleButton from \"./SideBarToggleButton\";\r\n\r\nconst Header = ({ handleRadioChange, handleSideBarToggle }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>\r\n        <Icon className=\"header-icon\" icon={locationIcon} /> Disaster Events\r\n        Tracker\r\n      </h1>\r\n      <div className=\"radio-container\">\r\n        <input\r\n          type=\"radio\"\r\n          value=\"wildfires\"\r\n          name=\"disaster\"\r\n          defaultChecked\r\n          onChange={handleRadioChange}\r\n          id=\"Wildfire\"\r\n        />\r\n        {\"\"}\r\n        <label htmlFor=\"Wildfire\">\r\n          <span> Wildfires </span>\r\n        </label>\r\n        <input\r\n          type=\"radio\"\r\n          value=\"storms\"\r\n          name=\"disaster\"\r\n          onChange={handleRadioChange}\r\n          id=\"Storm\"\r\n        />{\" \"}\r\n        <label htmlFor=\"Storm\">\r\n          <span>Storms</span>\r\n        </label>\r\n        <input\r\n          type=\"radio\"\r\n          value=\"volcanoes\"\r\n          name=\"disaster\"\r\n          onChange={handleRadioChange}\r\n          id=\"Volcano\"\r\n        />\r\n        {\"\"}\r\n        <label htmlFor=\"Volcano\">\r\n          <span>Volcanoes</span>\r\n        </label>\r\n      </div>\r\n\r\n      {/* <div className=\"menu-button\"></div> */}\r\n      <SideBarToggleButton handleSideBarToggle={handleSideBarToggle} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport \"./SideBar.css\";\r\n\r\nconst SideBar = ({ handleSideBarToggle, show }) => {\r\n  let sideBarClasses = \"side-bar\";\r\n  if (show) {\r\n    sideBarClasses = \"side-bar open\";\r\n  }\r\n\r\n  return (\r\n    <nav className={sideBarClasses}>\r\n      <div className=\"radio-container-side-bar\">\r\n        <input\r\n          type=\"radio\"\r\n          value=\"wildfires\"\r\n          name=\"disaster\"\r\n          defaultChecked\r\n          // onChange={handleChange}\r\n          id=\"Wildfire\"\r\n        />\r\n        {\"\"}\r\n        <label htmlFor=\"Wildfire\" onClick={handleSideBarToggle}>\r\n          <span> Wildfires </span>\r\n        </label>\r\n        <input\r\n          type=\"radio\"\r\n          value=\"storms\"\r\n          name=\"disaster\"\r\n          // onChange={handleChange}\r\n          id=\"Storm\"\r\n        />{\" \"}\r\n        <label htmlFor=\"Storm\" onClick={handleSideBarToggle}>\r\n          <span>Storms</span>\r\n        </label>\r\n        <input\r\n          type=\"radio\"\r\n          value=\"volcanoes\"\r\n          name=\"disaster\"\r\n          // onChange={handleChange}\r\n          id=\"Volcano\"\r\n        />\r\n        {\"\"}\r\n        <label htmlFor=\"Volcano\" onClick={handleSideBarToggle}>\r\n          <span>Volcanoes</span>\r\n        </label>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { useState, useEffect } from \"react\";\nimport Map from \"./components/Map\";\nimport Loader from \"./components/Loader/Loader\";\nimport Header from \"./components/Header\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport BackDrop from \"./components/BackDrop/BackDrop\";\n\nfunction App() {\n  const [eventData, setEventData] = useState([]);\n  const [loading, setLoading] = useState([]);\n  const [disasterEvent, setDisasterEvent] = useState(\"wildfires\");\n  const [sideBarOpen, setSideBarOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true);\n      const res = await fetch(\n        \"https://eonet.sci.gsfc.nasa.gov/api/v2.1/events\"\n      );\n      const { events } = await res.json();\n\n      setEventData(events);\n      setLoading(false);\n    };\n\n    // handleRadioChange();\n\n    fetchEvents();\n  }, []);\n\n  const handleRadioChange = (e) => {\n    setDisasterEvent(e.target.value);\n  };\n\n  // console.log(eventData);\n  // console.log(disasterEvent);\n  // console.log(sideBarOpen);\n\n  return (\n    <div>\n      <Header\n        handleRadioChange={handleRadioChange}\n        handleSideBarToggle={() => setSideBarOpen((prevState) => !prevState)}\n      />\n      <SideBar\n        handleSideBarToggle={() => setSideBarOpen(false)}\n        show={sideBarOpen}\n      />\n      {/* {sideBarOpen && (\n        <BackDrop handleSideBarToggle={() => setSideBarOpen(false)} />\n      )} */}\n\n      <div>\n        {!loading ? (\n          <Map eventData={eventData} eventSelection={disasterEvent} />\n        ) : (\n          <Loader />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}